Show 'myFirstApp' generated by current React SDK.
  1) Translations in separate JSON files.
  2) Not reusable, publishable.
  3) Need to be consistent across programming languages (Java, JavaScript, C#, HTML, JSP, etc.)
  3) Labels hard-coded into ShEx annotations.



The Artifact Generator:
-----------------------
0) 100% branch code coverage
npm test


1) One-off execution, using 'npx':
npx @inrupt/artifact-generator


2) Install globally:
npm install -g @inrupt/artifact-generator


3) Now run from anywhere:
lit-artifact-generator


4) Provide input, and it generates an NPM module...
lit-artifact-generator -i https://schema.org/version/latest/schema.ttl
  ...in the './generated' directory.

But that has ~2,000 terms - maybe we only want 5!


5) Show pre-built Widoco for Schema.org
http://localhost:8888/Widoco/index-en.html



6) Turn off the interactive prompting:
lit-artifact-generator -i https://schema.org/version/latest/schema.ttl --noprompt


 
7) Create a selective RDF file...
lit-artifact-generator -i https://schema.org/version/latest/schema.ttl --vocabTermsFrom vocab/just-the-terms-we-want-from-schema-dot-org.ttl --noprompt




8) Enhance selected terms with multi-lingual translations.
lit-artifact-generator -i https://schema.org/version/latest/schema.ttl --vocabTermsFrom vocab/our-translations-for-schema-dot-org.ttl --noprompt

And again, for real, with VCard:
lit-artifact-generator -i http://www.w3.org/2006/vcard/ns# --vocabTermsFrom vocab/vcard-inrupt-ext.ttl --noprompt






9) We can also automatically 'npm install' our modules...

 ...or 'npm publish' them (to any registry), or just bump the version number of an already published version...
lit-artifact-generator -i https://schema.org/version/latest/schema.ttl --vocabTermsFrom vocab/our-translations-for-schema-dot-org.ttl --noprompt --bumpVersion major



10) Bundle multiple vocabs into one single module, using a YAML file to stipulate them all.
lit-artifact-generator --vocabListFile ./vocab/CopyOf-Vocab-List-Common.yml --noprompt




11) Create a simple new custom vocab...
lit-artifact-generator -i ./vocab/PetRock.ttl --noprompt

cd generated/Widoco/
python -m SimpleHTTPServer 8889




12) Add our new vocab to our Solid App...
import { PET_ROCK } from '@inrupt/generated-vocab-pet-rock';

 - As you type 'PET_R', hit 'Ctrl-Space' in the IDE to get code completion...
 - As you type 'PET_ROCK.', hit 'Ctrl-Space' again to see all terms in the vocab...
 - As you cursor up and down the terms, hit 'Ctrl-Q' (IntelliJ) to see the JSDoc for that term to see what it actually is!

	    <b>Pet Rock shinyness - what is it?:</b><br></br>
	    {PET_ROCK.shinyness.comment}
	    <br></br>
	    <br></br>



13) So you want to override a vocab label directly? Just do it!

import { VCARD } from '@inrupt/generated-vocab-common';

VCARD.fn.addLabel('en', 'Kevins family name!');

