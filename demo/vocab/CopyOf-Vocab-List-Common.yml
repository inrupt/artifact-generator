#
# This file contains a simple list of vocabularies that we bundle together to
# form the collective set of 'Common' RDF vocabularies.
#
# These are the vocabs that we feel will be the most commonly used across
# general RDF development efforts, and so we list them here to allow our 
# artifact generators to create programming-language-specific bundles
# providing convenient constants representing the terms from these 
# vocabularies.
#
# For example, for Java developers we can generate a single JAR, or for
# JavaScript we can generate a single NPM module, that developers can depend
# on directly and easily get immediate access to source-code constants for all
# the terms in all of these vocabularies.
#
# Local vocabularies can be provided relative to the location of this resource
# list file.
#
# NOTE: THIS IS AN EXAMPLE OF HOW WE GENERATE THE ACTUAL LIT-COMMON ARTIFACT
# (as of August 2019). WE DO *NOT* APPLY OUR EXTENSIONS HERE FOR VOCABS LIKE
# Schema.org, OR VCard (OR INCLUDE LOCAL REFERENCES TO VOCABS THAT DON'T HAVE
# TURTLE SERIALIZATIONS (LIKE the VANN OR HTTP VOCABS) AS WE'D NEED TO
# REFERENCE THOSE EXTENSIONS FROM HERE, WHICH WOULD TIE US TO THEIR RELATIVE
# POSITION ON THE FILE SYSTEM.
#
artifactName: generated-vocab-common

artifactToGenerate:
  - programmingLanguage: Java
    javaPackageName: com.inrupt.testing
    solidCommonVocabVersion: "0.1.0-SNAPSHOT"
    artifactDirectoryName: Java
    templateInternal: solidCommonVocabDependent/java/rdf4j/vocab.hbs
    sourceFileExtension: java

  - programmingLanguage: JavaScript
    npmModuleScope: "@inrupt/"
    solidCommonVocabVersion: "^1.0.10"
    artifactDirectoryName: JavaScript
    templateInternal: solidCommonVocabDependent/javascript/vocab.hbs
    sourceFileExtension: js

vocabList:
  # NOTE: We *MUST* use the 'https://' URI for Schema.org, since the RIO parser
  # (used in our Java artifact generator) will not follow the 301 redirect from
  # 'http://', and so our RDF4J model will be empty and therefore so will our
  # generated source.
  - description: Schema.org (the full vocabulary)
    inputResources:
      - https://schema.org/version/latest/schema-snippet.ttl

#  - description: Schema.org with selective terms having translations
#    nameAndPrefixOverride: schema-inrupt-ext
#    inputResources:
#      - https://schema.org/version/latest/schema.ttl
#    termSelectionFile: ./rdf/Extensions/schema-inrupt-ext.ttl


  - description: VCARD (the full vocabulary)
    nameAndPrefixOverride: vcard
    inputResources:
      - http://www.w3.org/2006/vcard/ns#

#  - description: VCARD with selective terms having translations
#    nameAndPrefixOverride: vcard-inrupt-ext
#    inputResources:
#      - http://www.w3.org/2006/vcard/ns#
#    termSelectionFile: ./rdf/Extensions/vcard-inrupt-ext.ttl


  - description: RDF (the full vocabulary)
    nameAndPrefixOverride: rdf
    inputResources:
      - http://www.w3.org/1999/02/22-rdf-syntax-ns#

#  - description: RDF with selective terms having translations
#    nameAndPrefixOverride: rdf-inrupt-ext
#    inputResources:
#      - http://www.w3.org/1999/02/22-rdf-syntax-ns#
#    termSelectionFile: ./rdf/Extensions/rdf-inrupt-ext.ttl



  - description: rdfs
    nameAndPrefixOverride: rdfs
    inputResources:
      - http://www.w3.org/2000/01/rdf-schema#

  # OWL seems to have a bug in that the ontology itself is identified using a subject IRI without the
  # hash, yet the 'owl:' prefix correctly appends the hash.
  - description: OWL
    nameAndPrefixOverride: owl
    inputResources:
      - http://www.w3.org/2002/07/owl#

  - description: LDP
    inputResources:
      - https://www.w3.org/ns/ldp#

  # Default serialization is RDF/XML (and we have no parser available)...
#  - description: http
#    nameAndPrefixOverride: http
#    inputResources:
#      - http://www.w3.org/2011/http#

  - description: The Ordered List Ontology
    nameAndPrefixOverride: olo
    inputResources:
      - http://svn.code.sf.net/p/smiy/code/orderedlistonto/trunk/rdf/orderedlistontology.n3

#  - description: Simple Knowledge Organisation System (SKOS)
#    nameAndPrefixOverride: skos
#    inputResources:
##
## Both these 'authoritative' endpoints only seem to ever return RDF/XML (for which we don't have a parser!), so
## reference a local copy converted (using https://rdf-translator.appspot.com/) to Turtle instead.
##      - http://www.w3.org/2009/08/skos-reference/skos.rdf
##      - http://www.w3.org/2004/02/skos/core#
#      - ./rdf/CopyOfVocabs/skos-as-turtle.ttl

  # Tim Berners-Lee's UI vocabulary.
  #
  # Currently fails generation process with this error (i.e. terms uses '#', but namespace ends in '/'...
  #   Vocabulary term [http://www.w3.org/ns/ui#NumericField] found that is not in our namespace [https://www.w3.org/ns/] - currently this is disallowed (as it indicates a probable typo!)
  #
#  - description: ui
#    inputResources:
#      - https://www.w3.org/ns/ui.ttl

#  - description: The Core vocabulary
#    inputResources:
#      - ./rdf/OntologyDirMarker/Lit-Core.ttl
#
#  - description: The Consent vocabulary
#    inputResources:
#      - ./rdf/OntologyDirMarker/Lit-Consent.ttl
#      - ./rdf/OntologyDirMarker/Lit-Consent.ttl

  #
  # Could not find an RDF representation for VANN initially, so I created my
  # own. But Jarlath found an RDF/XML version somewhere, so that should be the
  # authorative one (and once I add RDF/XML parsing to the generator I can
  # remove this local version...!)
  #
#  - description: vann
#    inputResources:
#      - ./rdf/CopyOfVocabs/vann.ttl

  - description: dcterms
    nameAndPrefixOverride: dcterms
    inputResources:
      - http://dublincore.org/2012/06/14/dcterms.ttl
