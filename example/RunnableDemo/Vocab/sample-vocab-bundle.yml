# This configuration file can be used as an input by [@inrupt/lit-artifact-generator]
# to generate code artifacts from RDF vocabularies.
# 
# Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.4]
# on 'Thursday, July 22, 2021 4:47 PM'.

# The artifact name is shared among all the artifacts.
artifactName: ag-demo
artifactGeneratorVersion: 2.0.0

artifactToGenerate:
  - programmingLanguage: Java
    artifactVersion: 0.1.0
    artifactNamePrefix: ""
    artifactNameSuffix: ""

    artifactDirectoryName: Java
    sourceFileExtension: java
    javaPackageName: com.inrupt.testing

    solidCommonVocabVersion: 0.0.3
    rdf4jVersion: 3.4.2
    templateInternal: solidCommonVocabDependent/java/rdf4j/vocab.hbs

    packaging:
      - packagingTool: maven
        groupId: com.inrupt
        publish:
          - key: "mavenLocal"
            command: "mvn --version && mvn install"
        packagingTemplates:
          - templateInternal: solidCommonVocabDependent/java/rdf4j/pom.hbs
            fileName: pom.xml
  

  - programmingLanguage: JavaScript
    artifactVersion: "0.1.0"
    artifactNamePrefix: ""
    artifactNameSuffix: ""

    artifactDirectoryName: JavaScript
    sourceFileExtension: js

    solidCommonVocabVersion: "^1.0.0"
    rdfjsTypesVersion: "^1.0.1"
    rdfjsImplVersion: "^1.1.0"
    templateInternal: solidCommonVocabDependent/javascript/vocab.hbs

    supportBundling: false

    packaging:
      - packagingTool: npm
        npmModuleScope: "@inrupt/"
        bundleName: "AG-Demo"

        typescriptVersion: "^4.1.3"
        rollupVersion: "^2.36.1"
        rollupTypescriptPluginVersion: "^0.29.0"
        rollupCommonjsPluginVersion: "^17.0.0"
        rollupNodeResolveVersion: "^11.0.1"

        publish:
          - key: "local"
            command: "npm publish --registry http://localhost:4873"
          - key: "remote"
            command: "npm publish"
        packagingTemplates: 
          - templateInternal: solidCommonVocabDependent/javascript/index.hbs
            fileName: index.js
          - templateInternal: solidCommonVocabDependent/javascript/package.hbs
            fileName: package.json

# The following is the list of IRI and/or paths to read when building the artifact.
vocabList:
  - inputResources:
      - ./PetRock.ttl
    widocoLanguages: en-es

  - inputResources:
      - http://www.w3.org/2006/time#
    # The W3C Time vocabulary pre-dates VANN, so it doesn't provide a
    # preferred namespace prefix itself, so we provide one here:
    nameAndPrefixOverride: time
    widocoLanguages: en-es

  - description: Inrupt-determined cherry-picked Schema.org terms (that include label and comment translations)
    nameAndPrefixOverride: schema_inrupt
    widocoLanguages: en-es-de-it-fr
    # So here we are pulling in the entire Schema.org vocabulary...
    inputResources:
      - https://schema.org/version/latest/schemaorg-current-http.ttl
    # ...but here we are selectively choosing which terms we want (and
    # optionally adding more metadata for each of those chosen terms).
    termSelectionResource: ./Extension/schema-inrupt-ext.ttl

#  - description: Example of options - such as this description if the vocab itself doesn't provide one!
#    # What inputs to use - all terms from all input resources will be merged.
#    inputResources:
#      - http://usefulinc.com/ns/vocab1#
#      - http://different.com/ns/vocab2#
#      - http://example.com/ns/vocab3#
#    # What prefix to use if the vocab itself doesn't tell us (also used as the name for the
#    # generated source-code class, as we expect it to be short and intuitively descriptive).
#    nameAndPrefixOverride: prefix
#    # The server serving this vocabulary doesn't respond with a HTTP Content-Type header, so our
#    # code can't know which RDF parser to use. So we need to tell it explicitly what the content
#    # type returned actually is.
#    vocabContentTypeHeaderFallback: application/rdf+xml
#    # The server serving this vocabulary responds with the WRONG HTTP Content-Type header, so we
#    # need to tell it explicitly what the ACTUAL content type returned is.
#    vocabContentTypeHeaderOverride: application/rdf+xml
#    # The server serving this vocabulary doesn't honor the `q` parameter in Accept headers, so we
#    # need to explicitly ask for just Turtle.
#    vocabAcceptHeaderOverride: text/turtle
#    # In mid-2021, the newly added term 'https://identity.foundation/EcdsaSecp256k1RecoverySignature2020#EcdsaSecp256k1RecoverySignature2020'
#    # was causing our simple heuristic that guesses the namespace of a vocab
#    # that doesn't explicitly state its namespace (which is bad form!) to
#    # blow up - so we just provide the correct one manually here now instead.
#    namespaceOverride: https://w3id.org/security#
#    # This vocab also declares a number of annotation properties (e.g., for DCTERMS
#    # and SKOS terms) to keep the ontology within OWL DL, so we want to ignore
#    # those.
#    ignoreNonVocabTerms: true
#    # Only select the specific terms from the source vocabs described in this vocab:
#    termSelectionResource: ./Extension/schema-inrupt-ext.ttl
