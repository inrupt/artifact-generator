# This configuration file can be used as an input by [{{generatorName}}]
# to generate code artifacts from RDF vocabularies.
# 
# Generated by the artifact generator [{{generatorName}}], version [{{artifactGeneratorVersion}}]
# on '{{generatedTimestamp}}'.

# The artifact name is shared among all the artifacts.
artifactName: {{artifactName}}
artifactGeneratorVersion: {{artifactGeneratorVersion}}
{{#if versioning}}
versioning:
  type: {{versioning.type}}
  url: {{versioning.url}}
  {{#if versioning.versioningTemplates}}
  versioningTemplates:
  {{#each versioning.versioningTemplates}}
    - template: "{{template}}"
      fileName: "{{fileName}}"
  {{/each}}
  {{/if}}
{{/if}}

artifactToGenerate:
  {{#each artifactToGenerate}}
  - programmingLanguage: "{{programmingLanguage}}"
    artifactVersion: "{{artifactVersion}}"
    solidCommonVocabVersion: "{{solidCommonVocabVersion}}"
    artifactDirectoryName: "{{artifactDirectoryName}}"
    templateInternal: "{{templateInternal}}"
    sourceFileExtension: "{{sourceFileExtension}}"
    # Currently we're just adding terms as they occur in vocabs, and not all possible keywords.
    languageKeywordsToUnderscore:
      {{#each languageKeywordsToUnderscore}}
      - "{{this}}"
      {{/each}}
    {{#if javaPackageName}}
    javaPackageName: "{{javaPackageName}}"
    {{/if}}
    {{#if packaging}}
    packaging:
    {{#each packaging}}
      - packagingTool: "{{packagingTool}}"
        {{#if groupId}}
        groupId: "{{groupId}}"
        {{/if}}
        {{#if npmModuleScope}}
        npmModuleScope: "{{npmModuleScope}}"
        {{/if}}
        {{#if publish}}
        publish:
        {{#each publish}}
        - key: "{{key}}"
          command: "{{command}}"
        {{/each}}
        {{/if}}
        packagingTemplates: 
        {{#each packagingTemplates}}
          - template: {{template}}
            fileName: {{fileName}}
        {{/each}}
        {{#if repository}}
        repository:
          {{#each repository}}
            {{#if type}}
            - type: {{type}}
            {{/if}}
            {{#if id}}
            id: {{id}}
            {{/if}}
            {{#if url}}
            url: {{url}}
            {{/if}}
          {{/each}}
        {{/if}}
    {{/each}}
    {{/if}}
#    gitRepository: git@github.com:some_user/some_project.git
#    repository:
#      - type: repository
#        id: nexus-releases
#        url: https://nexus.mycompany.com/repository/maven-releases/
#        registry: http://localhost:4873/
  {{/each}}

vocabList:
  {{#each vocabList}}
# The following is the list of IRI and/or paths to read when building the artifact.
  - inputResources:
    {{#each inputResources}}
      - "{{this}}"
    {{/each}}
# This option is used as a name for the vocabulary, e.g. EXAMPLE.java or EXAMPLE.js
# If not provided, the generator will look for the vann:preferredNamespacePrefix property, 
# and otherwise will propose a default based on the domain name. 
    {{#if nameAndPrefixOverride}}
    nameAndPrefixOverride: "{{nameAndPrefixOverride}}"
    {{/if}}
    {{#if description}}
    description: "{{description}}"
    {{/if}}
    {{#if termSelectionFile}}
# This option allow us provide a second vocabulary that can add new terms, provide translations
# for existing terms' labels or comments, and that also only generates output for terms explicitly
# defined in this vocabulary (i.e. to selectively choose terms from the input resource(s))
    termSelectionFile: "{{termSelectionFile}}"
    {{/if}}
  {{/each}}