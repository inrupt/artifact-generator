{{#if license/header}}
{{license/header}}

{{/if}}
/**
 * generated by the artifact generator [{{generatorName}}], version [{{artifactGeneratorVersion}}]
 * as part of artifact: [{{artifactName}}], version: [{{artifactVersion}}]
 * on '{{generatedTimestamp}}'.
 *
 * {{sourceRdfResources}}
 */
package {{javaPackageName}};

import org.apache.commons.rdf.api.RDF;
import org.apache.commons.rdf.api.IRI;
import org.apache.commons.rdf.simple.SimpleRDF;

/**
{{#if description}}
 * {{{description}}}
{{/if}}
 */
public class {{vocabNameUpperCase}} {
    public static final String PREFIX = "{{vocabPrefix}}";
    public static final String NAMESPACE = "{{namespace}}";

    public static final RDF valueFactory = new SimpleRDF()
    public static final IRI NAMESPACE_IRI = valueFactory.createIRI("{{namespace}}");
//    public static final Namespace NS = new SimpleNamespace(PREFIX, NAMESPACE);

    public final IRI getNamespaceIri() {
        return NAMESPACE_IRI;
    }

    private static String FULL_IRI(final String localName) {
        return NAMESPACE + localName;
    }

{{#if classes}}
    // *****************
    // All the Classes.
    // *****************
    {{#each classes}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final IRI {{nameEscapedForLanguage}} = valueFactory.createIRI(FULL_IRI("{{{name}}}"));
{{/each}}
{{/if}}

{{#if properties}}
    // *******************
    // All the Properties.
    // *******************
    {{#each properties}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final IRI {{nameEscapedForLanguage}} = valueFactory.createIRI(FULL_IRI("{{{name}}}"));
{{/each}}
{{/if}}

{{#if literals}}
    // *******************
    // All the Literals.
    // *******************
    {{#each literals}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}
     */
    public static final IRI {{nameEscapedForLanguage}} = valueFactory.createIRI(FULL_IRI("{{{name}}}"));
{{/each}}
{{/if}}

{{#if constantStrings}}
    // **************************
    // All the constant strings.
    // **************************
    {{#each constantStrings}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}{{#if isDefinedBy}}
     *
     * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
     */
    public static final String {{nameEscapedForJava}} = "{{#each definitions}}{{{valueEscapedForJava}}}{{/each}}";
{{/each}}
{{/if}}

{{#if constantIris}}
    // ***********************
    // All the constant IRIs.
    // ***********************
    {{#each constantIris}}

    /**
     *{{#if comment}} {{{comment}}}{{/if}}{{#if isDefinedBy}}
     *
     * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
     */
    public static final IRI {{nameEscapedForJava}} = valueFactory.createIRI("{{#each definitions}}{{{valueEscapedForJava}}}{{/each}}");
{{/each}}
{{/if}}
}
