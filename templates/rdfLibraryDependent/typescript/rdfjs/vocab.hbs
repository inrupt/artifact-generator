{{#if license/header}}
{{license/header}}

{{/if}}
/**
Generated by the artifact generator [{{generatorName}}], version [{{artifactGeneratorVersion}}]
as part of artifact: [{{artifactName}}], version: [{{artifactVersion}}]
on '{{generatedTimestamp}}'.

{{sourceRdfResources}}
{{#if description}}

    {{{description}}}
{{/if}}
*/

import namespace as _namespace from "@rdfjs/namespace";
{{#if constantIris}}
import dataFactory as _dataFactory from "@rdfjs/data-model";

const { namedNode as _namedNode } = _dataFactory;
{{/if}}

const _RDFJS_NAMESPACE = _namespace("{{namespace}}");

const _NAMESPACE = "{{namespace}}";
function _NS (localName: string) {
  return (_NAMESPACE + localName);
}

{{#if description}}
/**
 * {{{description}}}
 */{{/if}}
const {{vocabNameUpperCase}} = {
  PREFIX: "{{vocabPrefix}}",
  NAMESPACE: _NAMESPACE,
  PREFIX_AND_NAMESPACE: { "{{vocabPrefix}}": "{{namespace}}" },
  NS: _NS,

{{#if classes}}
  // *****************
  // All the Classes.
  // *****************
  {{#each classes}}

  /**
   *{{#if comment}} {{{comment}}}{{/if}}{{#if translationDescription}}
   *
   * {{translationDescription}}{{/if}}{{#if seeAlsos}}
   *
   * See also:{{#each seeAlsos}}
   *  - {{seeAlso}}{{/each}}{{/if}}{{#if isDefinedBy}}
   *
   * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
   */
  {{nameEscapedForLanguage}}: _RDFJS_NAMESPACE("{{{name}}}"),
{{/each}}
{{/if}}

{{#if properties}}
  // *******************
  // All the Properties.
  // *******************
  {{#each properties}}

  /**
   *{{#if comment}} {{{comment}}}{{/if}}{{#if translationDescription}}
   *
   * {{translationDescription}}{{/if}}{{#if seeAlsos}}
   *
   * See also:{{#each seeAlsos}}
   *  - {{seeAlso}}{{/each}}{{/if}}{{#if isDefinedBy}}
   *
   * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
   */
  {{nameEscapedForLanguage}}: _RDFJS_NAMESPACE("{{{name}}}"),
{{/each}}
{{/if}}

{{#if literals}}
  // *******************
  // All the Literals.
  // *******************
  {{#each literals}}

  /**
   *{{#if comment}} {{{comment}}}{{/if}}{{#if translationDescription}}
   *
   * {{translationDescription}}{{/if}}{{#if seeAlsos}}
   *
   * See also:{{#each seeAlsos}}
   *  - {{seeAlso}}{{/each}}{{/if}}{{#if isDefinedBy}}
   *
   * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
   */
  {{nameEscapedForLanguage}}: "{{{name}}}",
{{/each}}
{{/if}}

{{#if constantStrings}}
  // **************************
  // All the constant strings.
  // **************************
  {{#each constantStrings}}

  /**
   *{{#if comment}} {{{comment}}}{{/if}}{{#if translationDescription}}
   *
   * {{translationDescription}}{{/if}}{{#if seeAlsos}}
   *
   * See also:{{#each seeAlsos}}
   *  - {{seeAlso}}{{/each}}{{/if}}{{#if isDefinedBy}}
   *
   * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
   */
  {{nameEscapedForLanguage}}: "{{#each definitions}}{{{valueEscapedForJavaScript}}}{{/each}}",
{{/each}}{{/if}}

{{#if constantIris}}
  // ***********************
  // All the constant IRIs.
  // ***********************
  {{#each constantIris}}

  /**
   *{{#if comment}} {{{comment}}}{{/if}}{{#if translationDescription}}
   *
   * {{translationDescription}}{{/if}}{{#if seeAlsos}}
   *
   * See also:{{#each seeAlsos}}
   *  - {{seeAlso}}{{/each}}{{/if}}{{#if isDefinedBy}}
   *
   * Defined by the vocabulary: {{isDefinedBy}}{{/if}}
   */
  {{nameEscapedForLanguage}}: _namedNode("{{#each definitions}}{{{valueEscapedForJavaScript}}}{{/each}}"),
{{/each}}{{/if}}
};

export default {{vocabNameUpperCase}};
