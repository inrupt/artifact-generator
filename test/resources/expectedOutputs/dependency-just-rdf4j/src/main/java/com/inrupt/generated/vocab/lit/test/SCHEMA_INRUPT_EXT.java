/**
 * Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.3]
 * as part of artifact: [generated-vocab-TEST], version: [0.1.5-SNAPSHOT]
 * on 'Monday, March 8, 2021 1:12 AM'.
 *
 * Vocabulary built from vocab list file: [./test/resources/yamlConfig/vocab-rdf-library-java-rdf4j.yml].
 */
package com.inrupt.generated.vocab.lit.test;

import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.Namespace;
import org.eclipse.rdf4j.model.ValueFactory;
import org.eclipse.rdf4j.model.impl.SimpleNamespace;
import org.eclipse.rdf4j.model.impl.SimpleValueFactory;

/**
 * Inrupt extension to Schema.org terms providing
 multilingual alternative names (i.e. labels) and translations for comments
 (e.g. for use directly as labels or tool-tips in user interfaces or error
 messages). This extension very deliberately cherry-picks the individual terms
 from Schema.org that Inrupt currently deem generally useful for Solid and Solid
 applications (meaning we can provide a much cleaner, less noisy and smaller
 bundle size when generating programming language artifacts that provide
 convenient constants for just these selected terms, rather than including the
 over 2,500 terms currently defined in Schema.org).
 */
public class SCHEMA_INRUPT_EXT {
    public static final String PREFIX = "schema-inrupt-ext";
    public static final String NAMESPACE = "http://schema.org/";

    public static final ValueFactory valueFactory = SimpleValueFactory.getInstance();

    public static final IRI NAMESPACE_IRI = valueFactory.createIRI("http://schema.org/");
    public static final Namespace NS = new SimpleNamespace(PREFIX, NAMESPACE);

    public final IRI getNamespaceIri() {
        return NAMESPACE_IRI;
    }

    private static String FULL_IRI(final String localName) {
        return NAMESPACE + localName;
    }

    // *****************
    // All the Classes.
    // *****************

    /**
     * A person (alive, dead, undead, or fictional).
     *
     * This term has multiple descriptions, but a mismatch between [6] labels in languages [de, en, es, fr, it], and [5] comments in languages [de, es, fr, it].
     *
     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#
     */
    public static final IRI Person = valueFactory.createIRI(FULL_IRI("Person"));


    // *******************
    // All the Properties.
    // *******************

    /**
     * Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.
     *
     * This term has multiple descriptions, but a mismatch between [6] labels in languages [de, en, es, fr, it], and [5] comments in languages [de, es, fr, it].
     *
     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#
     */
    public static final IRI givenName = valueFactory.createIRI(FULL_IRI("givenName"));

    /**
     * Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.
     *
     * This term has multiple descriptions, but a mismatch between [6] labels in languages [de, en, es, fr, it], and [5] comments in languages [de, es, fr, it].
     *
     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#
     */
    public static final IRI familyName = valueFactory.createIRI(FULL_IRI("familyName"));
 }
