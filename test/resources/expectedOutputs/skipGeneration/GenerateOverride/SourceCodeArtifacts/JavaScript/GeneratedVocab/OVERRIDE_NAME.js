const { LitVocabTerm, getLocalStore } = require("@inrupt/lit-vocab-term");
const dataFactory = require("@rdfjs/data-model");

const { namedNode } = dataFactory;

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.11]
  as part of artifact: [generated-vocab-common-TEST], version: [10.11.12]
  at 'Friday, May 22, 2020 10:53 AM'.

  Vocabulary built from vocab list file: [./test/resources/packaging/vocab-list-dummy-commands.yml].

  Vocabulary for terms used during Source Code Generation from RDF vocabularies.
 */

function _NS(localName) {
  return namedNode(`https://w3id.org/lit/vocab/code-generation#${localName}`);
}

const OVERRIDE_NAME = {
  PREFIX: "override-name",
  NAMESPACE: "https://w3id.org/lit/vocab/code-generation#",
  PREFIX_AND_NAMESPACE: { "override-name": "https://w3id.org/lit/vocab/code-generation#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * This is a rdfs class.
   */
  class1: new LitVocabTerm(
    _NS("class1"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`A rdfs class`)
    .addCommentNoLanguage(`This is a rdfs class.`),

  /**
   * This is an owl class.
   */
  class2: new LitVocabTerm(
    _NS("class2"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`An owl class`)
    .addCommentNoLanguage(`This is an owl class.`),

  /**
   * This is a skos concept class.
   */
  class3: new LitVocabTerm(
    _NS("class3"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`A skos concept class`)
    .addCommentNoLanguage(`This is a skos concept class.`),

  /**
   * This is a schema payment status type class.
   */
  class4: new LitVocabTerm(
    _NS("class4"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`A schema payment status type class`)
    .addCommentNoLanguage(`This is a schema payment status type class.`),

  // *******************
  // All the Properties.
  // *******************

  /**
   * This is a rdf property.
   */
  property1: new LitVocabTerm(
    _NS("property1"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`A rdf property`)
    .addCommentNoLanguage(`This is a rdf property.`),

  /**
   * This is a data type property.
   */
  property2: new LitVocabTerm(
    _NS("property2"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`A rdfs data type property`)
    .addCommentNoLanguage(`This is a data type property.`),

  /**
   * This is an owl object property.
   */
  property3: new LitVocabTerm(
    _NS("property3"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`An owl object property`)
    .addCommentNoLanguage(`This is an owl object property.`),

  /**
   * This is an owl named individual property.
   */
  property4: new LitVocabTerm(
    _NS("property4"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`An owl named individual property`)
    .addCommentNoLanguage(`This is an owl named individual property.`),

  /**
   * This is an owl annotation property.
   */
  property5: new LitVocabTerm(
    _NS("property5"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`An owl annotation property`)
    .addCommentNoLanguage(`This is an owl annotation property.`),

  /**
   * This is an owl datatype property.
   */
  property6: new LitVocabTerm(
    _NS("property6"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`An owl datatype property`)
    .addCommentNoLanguage(`This is an owl datatype property.`),

  // *******************
  // All the Literals.
  // *******************

  /**
   * This is a rdfs literal.
   */
  literal1: new LitVocabTerm(
    _NS("literal1"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`A rdfs literal`)
    .addCommentNoLanguage(`This is a rdfs literal.`),

  /**
   * Welcome
   */
  literal2: new LitVocabTerm(
    _NS("literal2"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addMessage(`Welcome`, "en")
    .addMessage(`Bienvenido`, "es")
    .addMessage(`Bienvenue`, "fr"),
  //
  // Marker allowing us put commas at the end of all lines above (only the last line does not have a comma).
  //
  END_OF_VOCAB: 'End of vocab.'
}

module.exports = OVERRIDE_NAME;
